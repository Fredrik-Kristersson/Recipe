<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:viewmodel="clr-namespace:Recipe.ViewModel"
	x:Class="Recipe.Window1"
	xmlns:local="clr-namespace:Recipe"
	xmlns:clr="clr-namespace:System;assembly=mscorlib"
	xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
	x:Name="Window"
	Title="Recipe store"
	Width="640" Height="480" 
	Loaded="Window_Loaded" 
	MinHeight="200" MinWidth="200" 
	Background="{DynamicResource BackgroundBrushGray}">

	<Window.Resources>
		<CollectionViewSource Source="{Binding Recipes}" x:Key="RecipesView" IsLiveFilteringRequested="True" IsLiveSortingRequested="True">
			<CollectionViewSource.LiveFilteringProperties>
				<clr:String>Name</clr:String>
			</CollectionViewSource.LiveFilteringProperties>
			<CollectionViewSource.SortDescriptions>
				<scm:SortDescription PropertyName="Name"/>
			</CollectionViewSource.SortDescriptions>
		</CollectionViewSource>

		<local:TabContentTemplateSelector x:Key="TabContentTemplateSelector" />

		<Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}" x:Key="CloseButtonStyle">
			<Setter Property="Command" Value="{Binding DataContext.CloseRecipeCommand,RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
			<Setter Property="CommandParameter" Value="{Binding TabName}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border 
							x:Name="CloseCircle" 
							Background="LightGray" 
							BorderBrush="Black" 
							CornerRadius="3" 
							Width="12" 
							Height="12"
							>
							<!--<Ellipse x:Name="CloseCircle" Width="12" Height="12" Stroke="LightGray" Fill="LightGray" Canvas.Top="-6" Canvas.Left="2"/>-->
							<Path x:Name="CloseIcon" Data="M3,3 L9,9 M9,3 L3,9" Stroke="Black" />
						</Border>
						<ControlTemplate.Triggers>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="Visibility" Value="Visible" />
									<Condition Property="IsMouseOver" Value="True"/>
								</MultiTrigger.Conditions>
								<MultiTrigger.Setters>
									<Setter TargetName="CloseIcon" Property="Stroke" Value="White" />
									<Setter TargetName="CloseCircle" Property="Background" Value="DarkGray" />
								</MultiTrigger.Setters>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="Visibility" Value="Visible" />
									<Condition Property="IsPressed" Value="True"/>
								</MultiTrigger.Conditions>
								<MultiTrigger.Setters>
									<Setter TargetName="CloseIcon" Property="Stroke" Value="White" />
									<Setter TargetName="CloseCircle" Property="Background" Value="Black" />
								</MultiTrigger.Setters>
							</MultiTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		
		<Style TargetType="TabItem">
			<Setter Property="HeaderTemplate">
				<Setter.Value>
					<DataTemplate DataType="local:TabViewModel">

						<StackPanel Orientation="Horizontal" Margin="5">
							<TextBlock Text="{Binding TabName}"/>
							<Button 
								x:Name="CloseButton" 
								Style="{StaticResource CloseButtonStyle}" 
								VerticalAlignment="Top" 
								HorizontalAlignment="Right"
								Margin="0,-6,-14,0"/>
						</StackPanel>
						<DataTemplate.Triggers>
							<DataTrigger Binding="{Binding IsCloseable}" Value="False">
								<Setter TargetName="CloseButton" Property="Visibility" Value="Collapsed" />
							</DataTrigger>
						</DataTemplate.Triggers>
					</DataTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="TabItem">
						<Border Name="Border" BorderThickness="1,1,1,0" BorderBrush="Gainsboro" CornerRadius="4,4,0,0" Margin="2,0">
							<ContentPresenter 
								x:Name="ContentSite"
								VerticalAlignment="Center"
								HorizontalAlignment="Center"
								ContentSource="Header"
								Margin="10,2"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter TargetName="Border" Property="Background" Value="LightSkyBlue" />
							</Trigger>
							<Trigger Property="IsSelected" Value="False">
								<Setter TargetName="Border" Property="Background" Value="GhostWhite" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<DataTemplate x:Key="MainTabTemplate">
			<Grid>
				<Grid.Resources>
					
				</Grid.Resources>
				
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="*"/>
				</Grid.RowDefinitions>
				<ListView
					SelectionMode="Single"
					SelectedValue="{Binding SelectedRecipe}"
					HorizontalAlignment="Stretch" 
					VerticalAlignment="Stretch"
					Grid.RowSpan="2"
					IsSynchronizedWithCurrentItem="True" 
					ItemsSource="{Binding Source={StaticResource RecipesView}, Mode=Default}" 
					x:Name="recipeTable"
					KeyDown="recipeTable_KeyDown" 
					ButtonBase.Click="GridViewColumnHeaderClickedHandler" 
					ScrollViewer.VerticalScrollBarVisibility="Auto"
					Grid.Row="1">
					<ListView.Resources>
						<DataTemplate x:Key="nameTemplate">
							<TextBlock Margin="3,0,3,0">
										<Hyperlink 
											Command="{Binding DataContext.OpenRecipeCommand, 
												RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
											CommandParameter="{Binding Name}">
											<TextBlock Text="{Binding Path=Name}"/>
										</Hyperlink>
									</TextBlock>
						</DataTemplate>

						<DataTemplate x:Key="sourceTemplate">
							<TextBlock Margin="3,0,3,0">
										<Hyperlink 
											Command="{Binding DataContext.OpenSourceCommand, 
												RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
											CommandParameter="{Binding Source}"
											>
											<TextBlock Text="{Binding Path=Source}"/>
										</Hyperlink>
									</TextBlock>
						</DataTemplate>
					</ListView.Resources>

					<ListView.View>
						<GridView>
							<GridViewColumn Header="Name" x:Name="nameColumn" CellTemplate="{StaticResource nameTemplate}"/>
							<GridViewColumn Header="Grade" DisplayMemberBinding="{Binding Path=Grade}"/>
							<GridViewColumn Header="Source" CellTemplate="{StaticResource sourceTemplate}"/>
						</GridView>
					</ListView.View>

				</ListView>
				<StackPanel HorizontalAlignment="Left" VerticalAlignment="Top" Grid.RowSpan="1" Orientation="Horizontal" Margin="0,5,0,5">
					<TextBox 
								HorizontalAlignment="Center"
								x:Name="filterBox" 
								VerticalAlignment="Center" 
								Width="150" Text="..." 
								TextWrapping="Wrap" 
								
								KeyUp="TextBox_KeyUp" 
								PreviewMouseLeftButtonUp="filterBox_PreviewMouseLeftButtonUp"/>
					<Button
								Margin="2,0,0,0"
								Content=""
								x:Name="clearButton"
								HorizontalAlignment="Center"
								Style="{DynamicResource filterButtonStyle}"
								VerticalAlignment="Center" 
								Width="20" 
								Height="20"/>
				</StackPanel>
				<StackPanel HorizontalAlignment="Right" Margin="0,5,0,5" Orientation="Horizontal" >
					<Button 
						Command="{Binding DataContext.EditRecipeCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
						Margin="3"
						Content="Edit" 
						MinWidth="75" 
						HorizontalAlignment="Center" 
						VerticalAlignment="Center"/>
					<Button
						Margin="3"
						Command="{Binding DataContext.RemoveRecipeCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
						Content="Remove"
						MinWidth="75"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"/>
				</StackPanel>
			</Grid>
		</DataTemplate>

		<DataTemplate x:Key="RecipeTabTemplate">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="*"/>
				</Grid.RowDefinitions>
				<TextBlock
					HorizontalAlignment="Center"
					Text="{Binding Name}"
					FontSize="20"/>
				<TextBox
					IsReadOnly="True"
					Grid.Row="1"
					TextWrapping="Wrap"
					BorderThickness="0"
					Text="{Binding Description}"/>
			</Grid>
		</DataTemplate>

	</Window.Resources>

	<Grid x:Name="LayoutRoot">
		<Grid.RowDefinitions>
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="*"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>
			<Menu  BorderThickness="1,1,1,1">
				<MenuItem Header="File">
					<MenuItem x:Name="openMenuItem" Header="Open..." Click="openMenuItem_Click"/>
					<MenuItem Header="Exit" Click="MenuItem_Click"/>
				</MenuItem>
			</Menu>
			<ToolBar Grid.Row="1" Grid.RowSpan="1">
				<Button Content="Add Recipe..." Command="{Binding AddRecipeCommand}"/>
			</ToolBar>
			<TabControl 
					IsSynchronizedWithCurrentItem="True" 
					Grid.Row="2" 
					ItemsSource="{Binding Tabs}"
					SelectedIndex="{Binding Path=TabSelectedIndex, Mode=TwoWay}"
					ContentTemplateSelector="{StaticResource TabContentTemplateSelector}">
			</TabControl>
			<Border Background="#FF000000" BorderBrush="{x:Null}" BorderThickness="1,1,1,1" CornerRadius="0,0,0,0" Grid.Row="3">
				<StatusBar>
					<StatusBarItem Content="{Binding MainTab.Recipes.Count}" HorizontalAlignment="Left" Margin="5,0,0,0" VerticalAlignment="Center"/>
					<StatusBarItem Content="Recipes" HorizontalAlignment="Left" VerticalAlignment="Center"/>
					<Separator/>
					<StatusBarItem Content=""/>
					<Slider Minimum="0" Maximum="2" Width="100" Interval="1" Value="{Binding Path=Position}"/>>
				</StatusBar>
			</Border>
		</Grid>
	</Grid>
</Window>