<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:recipes="clr-namespace:Recipes"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:converters="clr-namespace:ViewModelLib.Converters;assembly=ViewModelLib"
	mc:Ignorable="d"
	x:Class="Recipes.View.AddRecipeDialog"
	x:Name="Window"
	Title="Add Recipe"
	SizeToContent="WidthAndHeight"
	WindowStartupLocation="CenterOwner"
	MinHeight="400"
	MinWidth="350"
	Background="{DynamicResource BackgroundBrushGray}">

	<Grid x:Name="LayoutRoot">
		<Grid.Resources>
			<converters:SliderValueWidthConverter x:Key="SliderValueWidthConverter"/>
			
			<Style x:Key="SliderButtonStyle"
				 TargetType="{x:Type RepeatButton}">
				<Setter Property="SnapsToDevicePixels"
						Value="true" />
				<Setter Property="OverridesDefaultStyle"
						Value="true" />
				<Setter Property="IsTabStop"
						Value="false" />
				<Setter Property="Focusable"
						Value="false" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type RepeatButton}">
							<Border Background="Transparent" />
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="SliderThumbStyle"
				 TargetType="{x:Type Thumb}">
				<Setter Property="SnapsToDevicePixels"
						Value="true" />
				<Setter Property="OverridesDefaultStyle"
						Value="true" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Thumb}">
							<Grid>
								<Ellipse
									x:Name="Ellipse"
								 Width="20"
									Height="20"
									Stroke="#cdcdcd"
									Fill="White"
									StrokeThickness="1"/>
								<TextBlock 
									Margin="0,3,0,0"
									HorizontalAlignment="Center" 
									VerticalAlignment="Top" 
									Text="{Binding 
										RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Slider}},
										Path=Value, StringFormat=N1}"
									FontSize="10" 
									FontWeight="Bold"
									Foreground="#666666"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter TargetName="Ellipse" Property="Stroke" Value="#666666" />
									<Setter TargetName="Ellipse" Property="Fill" Value="#e6e6e6" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<!--Template when the orientation of the Slider is Horizontal.-->
			<ControlTemplate x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition 
							Height="Auto"
							MinHeight="{TemplateBinding MinHeight}" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					<TickBar 
						x:Name="TopTick"
						SnapsToDevicePixels="True"
						Placement="Top"
						Height="4"
						Visibility="Collapsed">
					</TickBar>
					<Border 
						Width="{Binding Path=Width, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Slider}}}"
						Margin="0"
						Height="4"
						Grid.Row="1"
						BorderThickness="0"
						Background="#cdcdcd">

						<Border
						HorizontalAlignment="Left"
						Margin="0"
						Height="4"
						Grid.Row="1"
						BorderThickness="0"
						Background="#009ddc">
							<Border.Width>
								<MultiBinding Converter="{StaticResource SliderValueWidthConverter}">
									<Binding 
										RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Slider}}" />
									<Binding Path="Value"
										RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Slider}}" />
									<Binding Path="ActualWidth"
										UpdateSourceTrigger="PropertyChanged"
										RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Slider}}"/>
								</MultiBinding>
							</Border.Width>
						</Border>
					</Border>
					<Track 
						Grid.Row="1"
						 x:Name="PART_Track">
						<Track.DecreaseRepeatButton>
							<RepeatButton 
								Style="{StaticResource SliderButtonStyle}"
								Command="Slider.DecreaseLarge" />
						</Track.DecreaseRepeatButton>
						<Track.Thumb>
							<Thumb Style="{StaticResource SliderThumbStyle}" />
						</Track.Thumb>
						<Track.IncreaseRepeatButton>
							<RepeatButton 
								Style="{StaticResource SliderButtonStyle}"
								Command="Slider.IncreaseLarge" />
						</Track.IncreaseRepeatButton>
					</Track>
					<TickBar
						x:Name="BottomTick"
						SnapsToDevicePixels="True"
						Grid.Row="2"
						Fill="{TemplateBinding Foreground}"
						Placement="Bottom"
						Height="4"
						Visibility="Collapsed" />
				</Grid>
				<ControlTemplate.Triggers>
					<Trigger Property="TickPlacement"
							 Value="TopLeft">
						<Setter TargetName="TopTick"
								Property="Visibility"
								Value="Visible" />
					</Trigger>
					<Trigger Property="TickPlacement"
							 Value="BottomRight">
						<Setter TargetName="BottomTick"
								Property="Visibility"
								Value="Visible" />
					</Trigger>
					<Trigger Property="TickPlacement"
							 Value="Both">
						<Setter TargetName="TopTick"
								Property="Visibility"
								Value="Visible" />
						<Setter TargetName="BottomTick"
								Property="Visibility"
								Value="Visible" />
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>

			<Style TargetType="{x:Type Slider}" x:Key="SliderStyle">
				<Setter Property="SnapsToDevicePixels"
						Value="true" />
				<Setter Property="OverridesDefaultStyle"
						Value="true" />
				<Style.Triggers>
					<Trigger Property="Orientation"
							 Value="Horizontal">
						<Setter Property="MinWidth"
								Value="50" />
						<Setter Property="Template"
								Value="{StaticResource HorizontalSlider}" />
					</Trigger>
				</Style.Triggers>
			</Style>

			<Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
				<Setter Property="Margin" Value="10" />
				<Setter Property="FontSize" Value="16"/>
				<Setter Property="VerticalAlignment" Value="Center"/>
			</Style>
			<Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
				<Setter Property="Margin" Value="5" />
				<Setter Property="FontSize" Value="16"/>
				<Setter Property="VerticalAlignment" Value="Center"/>
				<Setter Property="MinWidth" Value="200"/>
				<Setter Property="HorizontalAlignment" Value="Stretch"/>
			</Style>
		</Grid.Resources>
		
		
		<Grid x:Name="ContentGrid">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="*"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			
			<TextBlock 
				Text="Name"/>
			<TextBox
				Text="{Binding Name, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
				Grid.Column="1"/>
			
			<TextBlock 
				Grid.Row="1" 
				Text="Grade"/>
			<Slider
				Margin="6,0,6,0"
				VerticalAlignment="Center"
				Grid.Column="1" 
				Grid.Row="1" 
				Value="{Binding Grade}"
				Style="{StaticResource SliderStyle}"
				Maximum="5"
				Minimum="0"/>
			
			<TextBlock
				Grid.Row="2" 
				Text="Source"/>
			<TextBox
				x:Name="SourceTextBox"
				Grid.Column="1" 
				Grid.Row="2"
				Text="{Binding Source, Mode=TwoWay}"/>
			
			<TextBlock 
				Grid.Row="3" 
				Text="Image"/>
			<Grid
				VerticalAlignment="Center"
				Margin="0,0,5,0"
				HorizontalAlignment="Stretch"
				Grid.Column="1" 
				Grid.Row="3">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<TextBox 
					x:Name="ImageText"
					Text="{Binding Image, Mode=TwoWay}"/>
				<Button 
					Grid.Column="1"
					HorizontalAlignment="Left"
					Width="30"
					Height="{Binding ElementName=ImageText, Path=ActualHeight}"
					Content="..."
					Command="{Binding SelectImageCommand}"/>
			</Grid>

			<TextBox
				Visibility="Hidden"
				Grid.Row="5"
				VerticalAlignment="Stretch"
				Grid.ColumnSpan="2"
				x:Name="DescriptionSizeBindingHelper"/>
			<TextBlock
				Grid.ColumnSpan="2"
				Grid.Row="4" 
				Text="Description"/>
			<TextBox 
				Grid.ColumnSpan="2" 
				Grid.Row="5"
				VerticalAlignment="Stretch"
				Height="{Binding ElementName=DescriptionSizeBindingHelper, Path=ActualHeight}"
				Width="{Binding ElementName=DescriptionSizeBindingHelper, Path=ActualWidth}"
				Text="{Binding Description, Mode=TwoWay}" 
				TextWrapping="Wrap"
				AcceptsReturn="True" 
				AcceptsTab="True" 
				AutoWordSelection="True"
				VerticalScrollBarVisibility="Auto"
				HorizontalScrollBarVisibility="Disabled"/>

			<StackPanel 
				Margin="5"
				HorizontalAlignment="Right"
				Grid.Column="1"
				Grid.ColumnSpan="2" 
				Grid.Row="6" 
				Orientation="Horizontal">
				<Button 
					Margin="3"
					Content="OK"
					Command="{Binding OkCommand}"
					MinWidth="75" />
				<Button 
					Margin="3,3,0,3"
					MinWidth="75"
					Content="Cancel" 
					IsCancel="True"/>
			</StackPanel>

		</Grid>
	</Grid>
</Window>